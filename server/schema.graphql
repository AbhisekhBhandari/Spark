### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: User!
}

type Comment {
  comment: String!
  commentId: ID
  createdAt: String!
  postId: String!
  profilePicture: String
  userId: String!
  username: String!
}

type InvalidCredentials {
  error: String!
}

type Like {
  likeId: String!
  profilePicture: String
  userId: String!
  username: String!
}

"""auth details or errors"""
union LoginResponse = AuthPayload | InvalidCredentials

type Mutation {
  addComment(comment: String!, postId: String!): Comment
  createPost(caption: String, postImage: String): Post
  dataFill(dateOfBirth: String!, username: String!): User
  deletePost(postId: String!): String
  login(email: String!, password: String!): AuthPayload
  onLike(postId: String!): String
  signup(email: String!, password: String!): AuthPayload
}

type NotUniqueEmailError {
  error: String!
}

type Post {
  createdAt: String!
  isLiked: Boolean!
  likeCount: Int!
  postCaption: String
  postId: ID!
  postImage: String
  user: User!
  userId: String!
}

type Query {
  getComments(postId: String!): [Comment]!
  getPostLikes(postId: String!): [Like]!
  getPosts: [Post]
  getPostsByUserId(userId: String!): [Post]
  getSinglePost(postId: String!): Post
  getUserById(userId: String!): User
}

"""auth details or errors"""
union SignupResponse = AuthPayload | NotUniqueEmailError

type User {
  createdAt: String!
  dateOfBirth: String!
  email: String!
  isDataFilled: Boolean!
  password: String!
  profilePicture: String
  userId: ID!
  username: String!
}